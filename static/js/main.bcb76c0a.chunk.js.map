{"version":3,"sources":["logic/calculate.js","logic/constants.js","ParamsPanel.js","AnimationPanel.js","App.js","serviceWorker.js","index.js"],"names":["qFactor","Math","pow","getBranchPoint","isOptic","q","params","m1_m2","m1","m2","c2m1m2","C","meanMass","secondPart","sqrt","cos","a","result","calculateAnimation","currentTime","axis","toLowerCase","amplitude","x","y","marker","size","color","name","mode","currWAcoustic","currQ","currWOptic","u1","u2","i","ball_count","xW","xA","colorW","colorA","acousticWMax","abs","PI","opticalWMax","push","calculateXAnimation","yW","yA","calculateYAnimation","protonMass","scaleFactorC","ParamsPanel","state","handleInputChange","event","target","value","type","checked","parseFloat","_this","setState","Object","defineProperty","handleSetupClick","newParams","assign","constants","props","newParamsHandler","console","log","react_default","createElement","reactstrap_es","addonType","this","placeholder","min","max","step","onChange","onClick","PureComponent","AnimationPanel","isRunning","startStopClicked","axisClicked","plot","layout","autosize","title","xaxis","range","yaxis","updatemenus","buttons","args","label","direction","showactive","xanchor","yanchor","config","startLoop","stopLoop","_frameId","window","requestAnimationFrame","loop","bind","startStopAnimation","changeAxis","cancelAnimationFrame","animationParams","_this2","react_plotly_default","style","width","data","getScatterData","onInitialized","figure","onUpdate","onButtonClicked","menu","button","App","hovermode","branches","handleNewParams","handleBranchClick","points","length","setStateInterval","setInterval","floor","clearInterval","acoustic","optical","selected","brillouin_zone","qMax","qStep","wMax","calculateBranches","apply","dark","href","fluid","className","xs","offset","src_ParamsPanel","AnimationPanel_AnimationPanel","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bcb76c0a.chunk.js","sourcesContent":["/* Phonons main calculation\n\n\n\n\n\n\n */\n\n\nconst qFactor = Math.pow(10.0, 8);\n\n\nfunction getBranchPoint(isOptic, q, params) {\n\n    const m1_m2 = (params.m1 * params.m2);\n\n\n    const c2m1m2 = 2.0 * params.C / m1_m2;\n\n    const meanMass = (params.m1 + params.m2) / 2.0;\n\n    const secondPart = Math.sqrt(\n        Math.pow(params.m1 - params.m2, 2.0) / 4.0 + m1_m2 * Math.pow(Math.cos(q * params.a), 2.0)\n    );\n\n\n    let result = meanMass;\n    result += (isOptic) ? secondPart : -secondPart;\n\n    result *= c2m1m2;\n\n\n    return Math.sqrt(result);\n\n}\n\n\nexport default function calculateBranches(params) {\n\n    /*\n            m1: 1.0,\n            m2: 2.0,\n            a: 1.0,\n            C: 1.0\n     */\n\n\n    let result = {\n        acoustic: {\n            x: [],\n            y: [],\n            marker: {\n                size: 8,\n                color: 'blue'\n            },\n            name: 'Acoustic',\n\n            mode: 'lines+markers'\n        },\n\n        optical: {\n            x: [],\n            y: [],\n            marker: {\n                size: 8,\n                color: 'red'\n            },\n            name: 'Optical',\n\n\n            mode: 'lines+markers'\n        },\n\n        selected: {\n            x: [],\n            y: [],\n            marker: {\n                size: 10,\n                color: 'black'\n            },\n\n            name: 'Current',\n\n            mode: 'markers'\n        },\n\n        brillouin_zone: {\n            x: [],\n            y: [],\n            marker: {\n                size: 3,\n                color: 'black'\n            },\n\n            name: 'Brillouin zone',\n\n            mode: 'markers',\n\n\n        }\n    };\n\n\n    const qMax = Math.PI / params.a;\n    const qStep = 0.001 / params.a;\n\n    let wMax = 0;\n\n    for (let q = 0.0; q <= qMax; q += qStep) {\n        const acoustic = getBranchPoint(false, q, params);\n        const optical = getBranchPoint(true, q, params);\n\n        result.acoustic.x.push(q * qFactor);\n        result.acoustic.y.push(acoustic);\n\n        result.optical.x.push(q * qFactor);\n        result.optical.y.push(optical);\n        //\n        // if(acoustic > wMax)\n        //     wMax = acoustic;\n\n        if (optical > wMax)\n            wMax = optical;\n\n\n    }\n\n    for (let q = qMax / 2; q <= qMax; q += qMax / 2) {\n        for (let y = 0; y < wMax; y += wMax / 20) {\n            result.brillouin_zone.x.push(q * qFactor);\n            result.brillouin_zone.y.push(y);\n        }\n    }\n\n\n    const acoustic = getBranchPoint(false, params.currQ / qFactor, params);\n    const optical = getBranchPoint(true, params.currQ / qFactor, params);\n\n    result.selected.x.push(params.currQ);\n    result.selected.y.push(acoustic);\n\n    result.selected.x.push(params.currQ);\n    result.selected.y.push(optical);\n\n\n    return result;\n\n}\n\n//params is animationParams\n\n\nexport function calculateXAnimation(currentTime, params) {\n\n    const offset_x = 50;\n\n    const offset_y = 100;\n\n    const amplitude = 3 * Math.sqrt(offset_x);\n\n    let result = [\n        {\n\n            x: [],\n            y: [],\n            marker: {\n                size: 28,\n                color: []\n            },\n            name: 'Acoustic',\n\n            mode: 'lines+markers'\n\n\n        },\n        {\n\n            x: [],\n            y: [],\n            marker: {\n                size: 28,\n                color: []\n            },\n            name: 'Optical',\n\n            mode: 'lines+markers'\n\n\n        }\n    ];\n\n\n    const currWAcoustic = getBranchPoint(false, params.currQ / qFactor, params);\n\n    const currWOptic = getBranchPoint(true, params.currQ / qFactor, params);\n\n\n    let u1 = 1.0, u2 = 1.0;\n    if (params.m1 > params.m2) {\n        u1 = (-params.m2 / params.m1);\n    }\n    else if (params.m1 < params.m2) {\n        u2 = (-params.m1 / params.m2);\n    }\n\n\n    for (let i = 1; i <= params.ball_count; i++) {\n        let xW = 0, yW = 0,\n            xA = 0, yA = 0,\n            colorW = 'black', colorA = 'blue';\n\n\n        if (i % 2 === 1) {\n\n            colorW = 'black';\n            colorA = 'blue';\n\n            xA = (u1 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWAcoustic * currentTime / params.acousticWMax) + offset_x * (i - 1));\n\n            if (Math.abs(params.currQ - Math.PI / (2.0 * params.a) * qFactor) < 0.2) {\n                xW = offset_x * (i - 1);\n            } else {\n                xW = (u1 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWOptic * currentTime / params.opticalWMax) + offset_x * (i - 1));\n            }\n\n\n        } else {\n            colorW = 'yellow';\n            colorA = 'red';\n\n            xW = (u2 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWOptic * currentTime / params.opticalWMax) + offset_x * (i - 1));\n\n\n            if (Math.abs(params.currQ - Math.PI / (2.0 * params.a) * qFactor) < 0.2) {\n                xA = offset_x * (i - 1);\n            } else {\n                xA = (u2 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWAcoustic * currentTime / params.acousticWMax) + offset_x * (i - 1));\n            }\n\n\n        }\n\n        yW = offset_y;\n\n        yA = 3 * offset_y;\n\n\n        result[1].marker.color.push(colorW);\n        result[1].x.push(xW);\n        result[1].y.push(yW);\n\n        result[0].marker.color.push(colorA);\n        result[0].x.push(xA);\n        result[0].y.push(yA);\n\n    }\n\n\n    return result;\n\n\n}\n\n\nexport function calculateYAnimation(currentTime, params) {\n\n\n    const offset_x = 50;\n\n    const offset_y = 100;\n\n    const amplitude = 5 * Math.sqrt(offset_y);\n\n    let result = [\n        {\n\n            x: [],\n            y: [],\n            marker: {\n                size: 28,\n                color: []\n            },\n            name: 'Acoustic',\n\n            mode: 'lines+markers'\n\n\n        },\n        {\n\n            x: [],\n            y: [],\n            marker: {\n                size: 28,\n                color: []\n            },\n            name: 'Optical',\n\n            mode: 'lines+markers'\n\n\n        }\n    ];\n\n\n    const currWAcoustic = getBranchPoint(false, params.currQ / qFactor, params);\n\n    const currWOptic = getBranchPoint(true, params.currQ / qFactor, params);\n\n\n    let u1 = 1.0, u2 = 1.0;\n    if (params.m1 > params.m2) {\n        u1 = (-params.m2 / params.m1);\n    }\n    else if (params.m1 < params.m2) {\n        u2 = (-params.m1 / params.m2);\n    }\n\n\n    for (let i = 1; i <= params.ball_count; i++) {\n        let xW = 0, yW = 0,\n            xA = 0, yA = 0,\n            colorW = 'black', colorA = 'blue';\n\n\n        if (i % 2 === 1) {\n\n            colorW = 'black';\n            colorA = 'blue';\n\n            yA = offset_y + (u1 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWAcoustic * currentTime / params.acousticWMax));\n\n            if (Math.abs(params.currQ - Math.PI / (2.0 * params.a) * qFactor) < 0.2) {\n                yW = 0;\n            } else {\n                yW = (u1 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWOptic * currentTime / params.opticalWMax));\n            }\n\n\n        } else {\n            colorW = 'yellow';\n            colorA = 'red';\n\n            yW = (u2 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWOptic * currentTime / params.opticalWMax));\n\n\n            if (Math.abs(params.currQ - Math.PI / (2.0 * params.a) * qFactor) < 0.2) {\n                yA = offset_y;\n            } else {\n                yA = offset_y + (u2 * amplitude * Math.cos(2.0 * params.currQ * params.a * i - currWAcoustic * currentTime / params.acousticWMax));\n            }\n\n\n        }\n\n        xW = offset_x * (i - 1);\n\n        xA = offset_x * (i - 1);\n\n        yA += 2 * offset_y;\n        yW += offset_y;\n\n\n        result[1].marker.color.push(colorW);\n        result[1].x.push(xW);\n        result[1].y.push(yW);\n\n        result[0].marker.color.push(colorA);\n        result[0].x.push(xA);\n        result[0].y.push(yA);\n\n    }\n\n\n    return result;\n\n\n}\n\nexport function calculateAnimation(currentTime, axis, params) {\n    if (axis.toLowerCase() === 'x') {\n        return calculateXAnimation(currentTime, params);\n    }\n\n    return calculateYAnimation(currentTime, params);\n}","export const protonMass = 1.672621777E-24;\n\nexport const scaleFactorC = 1000.0;\n\nexport const deltaT = 0.1;","import React, {PureComponent} from 'react';\n\n\nimport {InputGroup, InputGroupAddon, Input, Button} from 'reactstrap';\n\n\nimport * as constants from './logic/constants.js';\n\nclass ParamsPanel extends PureComponent {\n\n\n    state = {\n\n        m1: 1.0,\n        m2: 2.0,\n        a: 1.0,\n        C: 1.0,\n        ball_count: 6\n    };\n    handleInputChange = event => {\n        //this.props.textChange(event);\n        //console.log(event);\n\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : (parseFloat(target.value) || 0);\n        const name = target.name;\n\n\n        this.setState({\n            [name]: value\n        });\n        //console.log(this.params);\n    };\n\n    handleSetupClick = () => {\n\n        let newParams = Object.assign({}, this.state);\n        newParams.m1 *= constants.protonMass;\n        newParams.m2 *= constants.protonMass;\n        newParams.C *= constants.scaleFactorC;\n\n        this.props.newParamsHandler(newParams);\n        //alert(this.params);\n        //console.log(this.state);\n    };\n\n\n    componentDidUpdate() {\n        console.log('ParamsPanel componentDidUpdate()');\n\n    }\n\n\n    render() {\n        return (\n            <div>\n\n                <h1>Params:</h1>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">m1</InputGroupAddon>\n                    <Input name={\"m1\"} value={this.state.m1}\n                           placeholder=\"Mass of 1st\"\n                           type=\"number\"\n                           min=\"0.0\" max=\"100.0\" step=\"0.1\"\n                           onChange={this.handleInputChange}/>\n                    <InputGroupAddon addonType=\"append\"> * Mp</InputGroupAddon>\n                </InputGroup>\n\n                <br/>\n\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">m2</InputGroupAddon>\n                    <Input name={\"m2\"} value={this.state.m2}\n                           placeholder=\"Mass of 2d\"\n                           type=\"number\"\n                           min=\"0.0\" max=\"100.0\" step=\"0.1\"\n                           onChange={this.handleInputChange}/>\n                    <InputGroupAddon addonType=\"append\"> * Mp</InputGroupAddon>\n                </InputGroup>\n\n                <br/>\n                <br/>\n\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">a</InputGroupAddon>\n                    <Input name={\"a\"} value={this.state.a}\n                           placeholder=\"\"\n                           type=\"number\"\n                           min=\"0.0\" max=\"100.0\" step=\"0.1\"\n                           onChange={this.handleInputChange}/>\n                    <InputGroupAddon addonType=\"append\">cm^(-8)</InputGroupAddon>\n                </InputGroup>\n\n                <br/>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">C</InputGroupAddon>\n                    <Input name={\"C\"} value={this.state.C}\n                           placeholder=\"\"\n                           type=\"number\"\n                           min=\"0.0\" max=\"100.0\" step=\"0.1\"\n                           onChange={this.handleInputChange}/>\n                    <InputGroupAddon addonType=\"append\">10^3 erg / cm^2</InputGroupAddon>\n                </InputGroup>\n\n\n                <br/>\n\n\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">Ball</InputGroupAddon>\n                    <Input name={\"ball_count\"} value={this.state.ball_count}\n                           placeholder=\"\"\n                           type=\"number\"\n                           min=\"2\" max=\"100\" step=\"1\"\n                           onChange={this.handleInputChange}/>\n                    <InputGroupAddon addonType=\"append\">Count</InputGroupAddon>\n                </InputGroup>\n\n\n                <br/>\n\n                <InputGroup>\n\n                    <Button color=\"success\" onClick={this.handleSetupClick}>Setup</Button>\n                </InputGroup>\n\n\n            </div>);\n    }\n\n}\n\n\nexport default ParamsPanel;","import React, {PureComponent} from 'react';\n\n\nimport Plot from 'react-plotly.js';\n\nimport * as constants from './logic/constants.js';\n\nimport {calculateAnimation} from './logic/calculate.js';\n\n\nexport default class AnimationPanel extends PureComponent {\n\n    state = {\n\n        isRunning: !false,\n        currentTime: 0.0,\n        axis: 'y',\n    };\n\n\n    startStopClicked = false;\n\n    axisClicked = false;\n\n\n    plot = {\n        layout: {\n            autosize: true, title: 'Animation',\n            xaxis: {range: [-20, 280]},\n            yaxis: {range: [0, 480]},\n\n            updatemenus: [\n                {\n                    buttons: [\n                        {\n                            args: [''],\n                            label: (this.state.isRunning) ? 'Stop' : 'Start',\n                            name: 'start_stop'\n                        },\n\n                        {\n                            args: [''],\n                            label: this.state.axis,\n                            name: 'change_axis'\n                        }\n                    ],\n                    direction: 'left',\n                    //pad: {'r': 10, 't': 10},\n                    showactive: true,\n                    type: 'buttons',\n                    x: 0.1,\n                    xanchor: 'left',\n                    y: 1.1,\n                    yanchor: 'top'\n                }\n            ]\n        },\n        config: {}\n    };\n\n    componentDidUpdate() {\n        //console.log('anim componentDidUpdate()');\n\n\n    }\n\n    componentDidMount() {\n        // this.setStateInterval = window.setInterval(() => {\n        //     if (!this.state.isRunning)\n        //         return;\n        //     this.setState({\n        //         currentTime: (this.state.currentTime + constants.deltaT)\n        //     });\n        // }, Math.floor(constants.deltaT * 500));\n        //\n        // console.log('mount anim');\n        this.startLoop();\n    }\n\n    componentWillUnmount() {\n        // window.clearInterval(this.setStateInterval);\n        this.stopLoop();\n    }\n\n    startStopAnimation() {\n        this.setState({\n            isRunning: !(this.state.isRunning)\n        });\n    }\n\n    changeAxis() {\n        this.setState({\n            axis: (this.state.axis === 'x') ? 'y' : 'x'\n        });\n    }\n\n    startLoop() {\n        if (!this._frameId) {\n            this._frameId = window.requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n\n    loop() {\n        this._frameId = window.requestAnimationFrame(this.loop.bind(this));\n\n        if (this.startStopClicked) {\n            this.startStopClicked = false;\n            return this.startStopAnimation();\n        }\n\n        if (this.axisClicked) {\n            this.axisClicked = false;\n            console.log('axisClicked');\n            return this.changeAxis();\n        }\n\n\n        if (!this.state.isRunning)\n            return;\n        this.setState({\n            currentTime: (this.state.currentTime + constants.deltaT)\n        });\n\n\n    }\n\n    stopLoop() {\n        window.cancelAnimationFrame(this._frameId);\n        // Note: no need to worry if the loop has already been cancelled\n        // cancelAnimationFrame() won't throw an error\n    }\n\n\n    getScatterData() {\n        // return range(1).map((index) => {\n        //     return {\n        //         x: [Math.sin(this.state.currentTime * Math.PI)],\n        //         y: [Math.cos(this.state.currentTime * Math.PI)],\n        //         marker: {\n        //             size: 14,\n        //             color: ['red', 'blue']\n        //         },\n        //         //ids: this.state.ids,\n        //         mode: 'markers'\n        //     };\n        //\n        //\n        // });\n\n        return calculateAnimation(this.state.currentTime, this.state.axis, this.props.animationParams);\n    }\n\n\n    render() {\n\n        this.plot.layout.updatemenus[0].buttons[0].label = (this.state.isRunning) ? 'Stop' : 'Start';\n\n        this.plot.layout.updatemenus[0].buttons[1].label = this.state.axis;\n\n        return (\n\n            <Plot style={{width: '100%'}}\n\n                  data={this.getScatterData()}\n                  layout={this.plot.layout}\n\n                  config={this.plot.config}\n\n                  onInitialized={(figure) => {\n                      this.plot.layout = figure.layout;\n                      this.plot.config = figure.config\n                  }}\n                  onUpdate={(figure) => {\n                      this.plot.layout = figure.layout;\n                      this.plot.config = figure.config\n                  }}\n\n                  onButtonClicked={(menu) => {\n                      //this.startStopAnimation.bind(this);\n\n                      if (menu.button.name === 'start_stop')\n                          this.startStopClicked = true;\n\n                      if (menu.button.name === 'change_axis')\n                          this.axisClicked = true;\n                  }}\n\n            />\n\n        )\n    }\n\n}","import React, {Component} from 'react';\n\n\nimport Plot from 'react-plotly.js';\n\nimport {Container, Row, Col} from 'reactstrap';\n\nimport calculateBranches from './logic/calculate.js';\n\nimport * as constants from './logic/constants.js';\n\nimport {\n    Navbar,\n    NavbarBrand,\n    Jumbotron,\n    NavLink\n} from 'reactstrap';\n\nimport ParamsPanel from './ParamsPanel.js';\nimport AnimationPanel from './AnimationPanel.js';\n\n\nclass App extends Component {\n\n    state = {\n        //currentTime: 0.0\n\n        params: {\n            m1: 1.0 * constants.protonMass,\n            m2: 2.0 * constants.protonMass,\n            a: 1.0,\n            C: 1.0 * constants.scaleFactorC,\n            currQ: 157079632.67948964,\n            ball_count: 6\n        }\n    };\n\n\n    plot = {\n        layout: {\n            title: 'Dispersion of phonons',\n            hovermode: 'closest'\n        },\n        config: {}\n    };\n\n\n    branches = null;\n\n\n    componentDidMount() {\n        this.setStateInterval = window.setInterval(() => {\n            // this.setState({\n            //     currentTime: (this.state.currentTime + deltaT)\n            // });\n        }, Math.floor(constants.deltaT * 900));\n\n        // if(this.branches == null){\n        //     this.branches = calculateBranches(this.state.params);\n        // }\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.setStateInterval);\n    }\n\n    getScatterData() {\n        return [this.branches.acoustic, this.branches.optical, this.branches.selected, this.branches.brillouin_zone];\n    }\n\n    handleNewParams = newParams => {\n        console.log(newParams);\n\n        newParams.currQ = this.state.params.currQ;\n\n        this.setState({\n            params: newParams\n        });\n    };\n\n    handleBranchClick = data => {\n        //console.log(event);\n        console.log('click', data);\n\n        if (!data.points.length)\n            return;\n\n        let newParams = Object.assign({}, this.state.params);\n\n        newParams.currQ = data.points[0].x;\n\n\n        this.setState({\n            params: newParams\n        });\n    };\n\n    render() {\n\n        // console.log('render');\n        // console.log(this.state.scatterData);\n\n\n        this.branches = calculateBranches(this.state.params);\n\n        let animationParams = Object.assign({}, this.state.params);\n\n        animationParams.opticalWMax = Math.max.apply(null, this.branches.optical.y);\n        animationParams.acousticWMax = Math.max.apply(null, this.branches.acoustic.y);\n\n        return (\n\n            <div>\n                <Navbar color=\"dark\" dark>\n                    <NavbarBrand href={\"#\"}>Phonons</NavbarBrand>\n                    <NavLink href=\"https://github.com/Kolsha/phonons-dispersion/\" target={\"_blank\"}>Github</NavLink>\n                </Navbar>\n\n                <Jumbotron fluid={true}>\n                    <Container fluid={true} className={\"h-25\"}>\n\n                        <Row>\n                            <Col xs=\"8\">\n                                <Plot style={{width: '100%'}}\n                                      data={this.getScatterData()}\n                                      onClick={this.handleBranchClick}\n\n                                      layout={this.plot.layout}\n\n                                      config={this.plot.config}\n\n                                      onInitialized={(figure) => {\n                                          this.plot.layout = figure.layout;\n                                          this.plot.config = figure.config\n                                      }}\n                                      onUpdate={(figure) => {\n                                          this.plot.layout = figure.layout;\n                                          this.plot.config = figure.config\n                                      }}\n                                />\n                            </Col>\n\n                            <Col xs={{size: 4, offset: 0}}>\n\n                                <ParamsPanel newParamsHandler={this.handleNewParams}/>\n\n                            </Col>\n                        </Row>\n\n\n                        <br/>\n                        <Row>\n                            <Col xs=\"12\">\n                                <AnimationPanel animationParams={animationParams}/>\n                            </Col>\n\n                        </Row>\n\n\n                    </Container>\n                </Jumbotron>\n\n\n                <footer className=\"footer font-small blue\">\n                    \n                    <div className=\"footer-copyright text-center py-3\">© 2018 Copyright:\n                        <a href=\"https://kolsha.ru\"> Kolsha</a>\n                    </div>\n\n                </footer>\n            </div>\n\n\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}